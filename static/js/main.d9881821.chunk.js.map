{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newMovie","handleChange","event","target","name","value","setState","trim","handleSubmit","preventDefault","addMovie","props","this","method","onSubmit","type","placeholder","onChange","required","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9881821.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      newMovie: {\n        ...state.newMovie,\n        [name]: value.trim(),\n      },\n    }));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n    const { newMovie } = this.state;\n\n    addMovie(newMovie);\n\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state.newMovie;\n\n    return (\n      <form method=\"POST\" onSubmit={this.handleSubmit}>\n\n        <label>\n          Title:\n          <br />\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <label>\n          Description:\n          <br />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"description\"\n            value={description}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <label>\n          ImgUrl:\n          <br />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <label>\n          ImdbUrl:\n          <br />\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <label>\n          ImdbId:\n          <br />\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <button type=\"submit\">\n          Add\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}